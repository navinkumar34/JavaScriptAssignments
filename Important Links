HTML & CSS :
https://www.internetingishard.com/
http://www.csun.edu/science/help/help_docs/html_tags.html
https://css-tricks.com/

CSS Flexbox:
CSS Flexbox in 100 Seconds : https://www.youtube.com/watch?v=K74l26pE4YA
https://flexboxfroggy.com/

DOM Manipulation :
https://www.theodinproject.com/courses/web-development-101/lessons/dom-manipulation
https://www.w3.org/TR/WD-DOM/introduction.html

Porfolio example :
https://vakila.github.io/

JavaScript :
https://javascript.info/
Learning Functional Programming with JavaScript - Anjana Vakil - JSUnconf : https://www.youtube.com/watch?v=e-5obm1G_FY
JavaScript/Automatic semicolon insertion : https://en.wikibooks.org/wiki/JavaScript/Automatic_semicolon_insertion
Immutable data structures for functional JS : https://www.youtube.com/watch?v=Wo0qiGPSV-s&t=306s
Functional Programming in JS: What? Why? How?: https://www.youtube.com/watch?v=qtsbZarFzm8
Functional JavaScript Tutorial - #1: Functions: https://www.youtube.com/watch?v=y3cDlxhnq_Y
Higher-order functions - Part 1 of Functional Programming in JavaScript: https://www.youtube.com/watch?v=BMUiFMZr7vk
JavaScript Functional Programming : https://www.youtube.com/watch?v=d4kR4GuGmRQ
Learn JavaScript by Building 7 Games : https://www.youtube.com/watch?v=lhNdUVh3qCc

Arrow Functions:
5 Best Practices to Write Quality Arrow Functions : https://dmitripavlutin.com/javascript-arrow-functions-best-practices/

closure:
https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36

Ramda JS:
https://ramdajs.com/
Ramda JS â€“ An Introduction : https://www.youtube.com/watch?v=AINnOyUVEyI
Cleaner code with pipe | functional programming in javascript (with Ramda.JS): https://www.youtube.com/watch?v=Y5D_xTR7RLY
Composition | functional programming in javascripthttps://www.youtube.com/watch?v=amcbnkKzDqc
Functional programming with React & Ramda JS : https://www.youtube.com/watch?v=JIyjheUz-xg

Event loop:
What the heck is the event loop anyway : https://www.youtube.com/watch?v=8aGhZQkoFbQ

Promise:
https://medium.com/better-programming/understanding-promises-in-javascript-13d99df067c1

Fetch:
https://developers.google.com/web/updates/2015/03/introduction-to-fetch

Important JavaScript topics:
-> Hoisting
-> Closure : function inside a function
-> Copy by reference : when we copy an array or object, those are copied by reference
-> Copy by value : All primitive data types are copied by value, as changes in one are not refelected on to other
-> Callback and it's scope
-> Callback hell
-> Promise chaining
-> Promise.all -> it we want to use result of all promises in one go the Promise.all is used.If all promises resolve then only it will go to then
    otherwise it will go to catch.
-> fetch

